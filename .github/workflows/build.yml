name: .NET6-CI-CD-Azure

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: ppExternal
  AZURE_WEBAPP_PACKAGE_PATH: ${{github.workspace}}/bin/Release/net6.0/publish/
  DOTNET_VERSION: 6.0.100-preview.7.21379.14

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Show directory and working path
      run: |
          pwd
          ls -la

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
      
    - name: Build
      run: |
          cd /home/runner/work/PP_ExternalMicroService/PP_ExternalMicroService/Prestadito.External
          dotnet build
    
    - name: Publish
      run: |
          cd /home/runner/work/PP_ExternalMicroService/PP_ExternalMicroService/Prestadito.External
          dotnet publish 

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: ppExternal
        path: /home/runner/work/PP_ExternalMicroService/PP_ExternalMicroService/Prestadito.External

  Scan:
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Prestadito-PE_PP_ExternalMicroService" /o:"prestadito-pe" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: production
      url: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v2
      with:
        name: ppExternal
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Install Azure CLI
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az upgrade
          az login 
          az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION }}
      
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: production
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
